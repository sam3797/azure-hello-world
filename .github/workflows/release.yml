# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Create and publish a Docker image

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'v1.21.3'
        id: install

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUBTOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}-${{ github.run_number }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

          # - name: Creating kubernetes cluster
          #run: |
          #aws eks create-cluster --name simple-bank \
          #        --role-arn arn:aws:iam::042418029664:role/eksClusterRole \
          #        --resources-vpc-config subnetIds=subnet-009fb3d24d9b1cf38,subnet-0c608ad906dabe5c3,securityGroupIds=sg-0e860bf67b9e631a6;
          #sleep 900
          
          #- name: Creating node group
          # run: |
          #aws eks create-nodegroup --nodegroup-name simple-bank-node \
          #        --cluster-name simple-bank \
          #         --scaling-config minSize=2,maxSize=2,desiredSize=2 \
          #         --subnets "subnet-009fb3d24d9b1cf38" "subnet-0c608ad906dabe5c3" --instance-types "t2.micro" --ami-type "AL2_x86_64"  \
          #         --node-role arn:aws:iam::042418029664:role/AmazonEKSNodeRole --tags Name=kube-system;
          #sleep 600
      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank --region us-east-1
      
      - name: Deploy image to Amazon EKS
        run: |
           kubectl apply -f eks/aws-auth.yaml
           #kubectl create secret docker-registry regcred --docker-server=ghcr.io --docker-username=sam3797 --docker-password=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 --docker-email=sampath16b@gmail.com
           #kubectl create secret docker-registry regcred1 --docker-server=ghcr.io --docker-username=IndhumathiParamasivam --docker-password=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 --docker-email=indhucse044@gmail.com
           kubectl apply -f eks/deployment.yaml
           kubectl apply -f eks/service.yaml
           kubectl apply -f eks/ingress.yaml
